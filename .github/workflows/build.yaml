name: build
on:
  push: {}
  pull_request:
    types: [opened, synchronize, reopened, edited]
  schedule:
    # 8AM first day of the month in JAN and JUNE to keep workflow badges up-to-date
    - cron: "0 8 1 1,6 *"

jobs:
  feature-matrix:
    uses: ./.github/workflows/feature-matrix.yaml

  build:
    name: build ${{ matrix.package.name }} (${{ matrix.os }}, features ${{ matrix.package.features }})
    runs-on: ${{ matrix.os }}
    needs: [feature-matrix]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-24.04]
        package: ${{ fromJson(needs.feature-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        # prettier-ignore
        run: >-
          cargo build
          --package "${{ matrix.package.name }}"
          --features "${{ matrix.package.features }}"
          --all-targets

  build-goreleaser:
    runs-on: ubuntu-24.04
    outputs:
      precompiled-binaries-url: ${{ steps.upload.outputs.artifact-url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release (dry-run)
        run: task build:goreleaser
      - name: Upload precompiled binaries
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: goreleaser-dist
          path: goreleaser-dist

  build-container:
    runs-on: ubuntu-24.04
    needs: [build-goreleaser]
    steps:
      - uses: actions/checkout@v4
      - name: Download precompiled binaries
        uses: actions/download-artifact@v4
        with:
          name: goreleaser-dist
          path: goreleaser-dist
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build multi-arch container
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/romnn/publish-crates:latest
            ghcr.io/romnn/publish-crates:${{ github.ref_name }}
